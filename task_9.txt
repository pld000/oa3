Схема создания объектов

1 Инициализация игры
   - При запуске игры создаётся объект GameEngine.
   - GameEngine запрашивает у StateMachine начальное состояние (например, StartState).
   - Фабрика (MatchHandlerFactory) инициализирует обработчики комбинаций.
   - InputProcessor подключается для обработки действий игрока.

2 Создание обработчиков комбинаций и бонусов
   - Используется Factory Method:
   - MatchHandlerFactory создаёт объекты обработчиков комбинаций (LineMatchHandler, CrossMatchHandler).
   - BonusHandlerFactory создаёт объекты для обработки бонусов (RowBonusHandler, ColumnBonusHandler).

3 Состояния игры
   - Состояния реализуются с помощью паттерна State:
     - Классы состояний (StartState, PlayState, EndState) создаются StateMachine при необходимости перехода.

Обработка событий

1 Ввод игрока
   - Игрок выполняет действие → событие отправляется в InputProcessor.
   - InputProcessor валидирует ввод и вызывает processPlayerAction у GameEngine.

2 Изменение состояния
   - GameEngine проверяет текущее состояние через StateMachine.
   - Если требуется переход, вызывается метод `transitionToState`.

3 Обработка комбинаций
   - GameEngine определяет тип комбинации и вызывает обработчик через MatchHandlerFactory.
   - Обработчик обновляет очки через ScoreCalculator.

4 Логгирование
   - Все ключевые события (например, начало игры, переход между состояниями, завершение) отправляются в Logger.

Увязка с технологиями и фреймворками
   - Интерфейс в игре упрощенный, UI - фреймворк использоваться не будут
   - NodeJS - среда разработки
   - Mocha - для тестирования


Тесты для типовых сценариев

1 Тесты инициализации игры
   - Проверить корректное создание объекта GameEngine.
   - Убедиться, что начальное состояние игры задаётся верно.

2 Тесты переходов состояний
   - Проверить корректность перехода между состояниями (например, из StartState в PlayState, из PlayState в EndState).

3 Тесты обработки ввода игрока
   - Ввод валидных данных → действие выполняется корректно.
   - Ввод некорректных данных → ошибка обработана.

4 Тесты логики обработки комбинаций
   - Проверить, что правильный обработчик вызывается для каждого типа комбинации.
   - Проверить правильность подсчёта очков.

5 Тесты обработки бонусов
   - Проверить активацию бонусов при выполнении условий.
   - Проверить корректность изменения состояния игрового поля после применения бонуса.
