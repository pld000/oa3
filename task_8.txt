cellIds - номера ячеек на удаление, т.е. три и более ячеек в линию
interface Combination {
    id: number,
    type: 'row' | 'column',
    cellIds: number[],
    bonus: boolean,
}

interface LogInfo {
    move: string;
    bonus: string;
    score: number
}

GameProcessor
- Команды:
  - startGame(): void - Запускает игру
  - processPlayerAction(): void - реагирует на действия пользователя

GameState
- Запросы:
  - getInitialState(): Cell[][]
    - возвращает начальное состояние игрового поля
  - isTransitionValid(a: Cell, b: Cell): boolean;
    - проверяет возможность перехода в новое состояние
  - getCombinations(state: Cell[][]): Combination[]
    - возвращает массив найденных комбинаций, отсортированный в порядке убывания длинны cellIds
  - getNormalizedState(state: Cell[][])
    - возвращает state с заполненными ячейками, после удаления трех и более ячеек в линии

- Команды:
  - ChangeCells(a: Cell, b: Cell): void
    - меняет ячейки местами

Bonus
- Запросы:
  - extendCombinations(combinations: Combination[]): Combination[]
    - если удовлетворяет условиям бонуса (в линию больше 4), то cellIds заполняются всеми элементами

Score
- Команды:
  - calculate(Combination[]): void
    - подсчитывает очки по заданным условиям
    - записывает в статистику данные хода Statistic.write(info: LogInfo)

GameBoard
- Команды:
  - draw(state: Cell[][]): void
    - рисует матрицу 8 на 8


Cell
- neighbors: number[]
- position: number[]
